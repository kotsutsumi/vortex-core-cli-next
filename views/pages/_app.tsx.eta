// _app.tsx

import '@/styles/globals.css'
import 'primeflex/primeflex.css'
import 'primeicons/primeicons.css'
import 'primereact/resources/primereact.min.css'
import React, { Dispatch, useState } from 'react'
import type { AppProps } from 'next/app'
import type { NextPage } from 'next'
import { ReactElement, ReactNode, useEffect } from 'react'
import { SessionProvider } from 'next-auth/react'
import { appWithTranslation } from 'next-i18next'

// NextPageWithLayout
export type NextPageWithLayout<P = {}, IP = P> = NextPage<P, IP> & {
    getLayout?: (page: ReactElement) => ReactNode
}

// AppPropsWithLayout
type AppPropsWithLayout = AppProps & {
    Component: NextPageWithLayout
}

const App = ({
    Component,
    pageProps: { session, ...pageProps }
}: AppPropsWithLayout) => {
    // Use the layout defined at the page level, if available
    const getLayout = Component.getLayout || ((page) => page)

    // similar to componentDidMount and componentDidUpdate
    useEffect(() => {}, [])

    // ------------------------------------------------------------------------

    return (
        <>
            <SessionProvider session={session}>
                {getLayout(<Component {...pageProps} />)}
            </SessionProvider>
        </>
    )

    //
}

export default appWithTranslation(App)

// EOF

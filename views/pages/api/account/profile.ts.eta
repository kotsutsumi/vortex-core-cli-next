// profile.ts

import { db, firebase } from '@/libs/firebase/admin'
import type { NextApiRequest, NextApiResponse } from 'next'
import { getStorage, ref, uploadBytes, getDownloadURL } from 'firebase/storage'

export default async function handler(
    req: NextApiRequest,
    res: NextApiResponse
) {
    // set correction name
    const COLLECTION_NAME = 'users'

    if (req.method === 'GET') {
        // set target document
        const targetDoc = req.headers.uid

        // get document
        const doc = await db
            .collection(COLLECTION_NAME)
            .doc(req.headers.uid as string)
            .get()

        // set data
        const data = doc.data()

        // response
        res.status(200).json({
            // Firstname
            firstname: data?.firstname,

            // Lastname
            lastname: data?.lastname,

            // Firstname Kana
            firstname_kana: data?.firstname_kana,

            // Lastname Kana
            lastname_kana: data?.lastname_kana,

            // Nickname
            nickname: data?.nickname,

            // Profile URL
            profile_url: data?.profile_url

            //
        })

        //
    } else if (req.method === 'POST') {
        // set data
        const data = req.body

        // set target document
        const targetDoc = data.uid

        // get document
        const doc = await db.collection(COLLECTION_NAME).doc(targetDoc).get()

        let uploadResult = null

        if (data.profile != null) {
            // extract base64 image data
            const fileData = data.profile.replace(/^data:\w+\/\w+;base64,/, '')

            // convert base64 to buffer
            const profile = Buffer.from(fileData, 'base64')

            // get storage
            const storage = getStorage()

            try {
                // set storage reference
                const storageRef = ref(storage, `/profiles/${data.uid}.jpg`)

                // 'file' comes from the Blob or File API
                await uploadBytes(storageRef, profile).then(async function (
                    result
                ) {
                    await getDownloadURL(storageRef).then(function (url) {
                        uploadResult = url
                    })

                    //
                })
            } catch (e) {
                // response
                res.status(500).json({ success: false })

                //
            }

            //
        }

        const writeData = {
            firstname: data.firstname,
            lastname: data.lastname,
            firstname_kana: data.firstname_kana,
            lastname_kana: data.lastname_kana,
            nickname: data.nickname,
            profile_url: uploadResult,
            created_at: firebase.firestore.FieldValue.serverTimestamp()
        }

        if (uploadResult) {
            writeData.profile_url = uploadResult
        } else {
            writeData.profile_url = doc.data()?.profile_url
        }

        // set document
        await doc.ref.set(writeData)

        //

        res.status(200).json({ success: true })

        //
    }

    //
}

// EOF

// Sidebar.tsx

import NextImage from 'next/image'
import Menu from '@/components/Menu'
import { useContext, useEffect, useState } from 'react'
import Link from 'next/link'
import { Badge } from 'primereact/badge'
import ThemeSwitcher, {
    getCurrentThemeName,
    getReveseThemeName
} from './ThemeSwitcher'
import LanguageSelector from './LanguageSelector'
import { useRouter } from 'next/router'
import { useTranslation } from 'next-i18next'
import { PrimeReactThemeContext } from '@/contexts/PrimeReactThemeContext'

export default function Sidebar() {
    // use router
    const router = useRouter()

    // use i18n
    const { t } = useTranslation('common')

    // use classes state
    const [classes, setClasses] = useState([
        'surface-section',
        'h-screen',
        'hidden',
        'lg:block',
        'flex-shrink-0',
        'absolute',
        'lg:static',
        'left-0',
        'top-0',
        'z-1',
        'border-right-1',
        'surface-border',
        'select-none'
    ])

    // use item classes state
    const [itemClasses, setItemClasses] = useState([
        'flex',
        'flex-column',
        'h-full'
    ])

    // use logo classes state
    const [logoClasses, setLogoClasses] = useState([
        'flex',
        'align-items-center',
        'mt-4',
        'px-4',
        'flex-shrink-0'
    ])

    // use menu classes state
    const [menuClasses, setMenuClasses] = useState([''])

    // use style state
    const [style, setStyle] = useState({
        width: '280px'
    })

    // use item style state
    const [itemStyle, setItemStyle] = useState({})

    // use logo style state
    const [logoStyle, setLogoStyle] = useState({
        height: '60px'
    })

    // use menu style state
    const [menuStyle, setMenuStyle] = useState({})

    // use logo src state
    const [logoSrc, setLogoSrc] = useState<string>(
        `/images/logo-${getCurrentThemeName()}.svg`
    )

    // darkmode context
    const { isDarkMode, setIsDarkMode } = useContext(PrimeReactThemeContext)

    // similar to componentDidMount and componentDidUpdate
    useEffect(() => {
        setLogoSrc(`/images/logo-${getCurrentThemeName()}.svg`)
    }, [isDarkMode])

    // -------------------------------------------------------------

    return (
        <>
            {/* Sidebar */}
            <div id="sidebar" className={classes.join(' ')} style={style}>
                {/* Sidebar Items */}
                <div className={itemClasses.join(' ')} style={itemStyle}>
                    {/* Logo */}
                    <div className={logoClasses.join(' ')} style={logoStyle}>
                        <Link href="/">
                            <NextImage
                                src={logoSrc}
                                alt="logo"
                                height={48}
                                width={168}
                            />
                        </Link>
                    </div>
                    {/* Menu */}
                    <div className={menuClasses.join(' ')} style={menuStyle}>
                        <Menu />
                    </div>

                    <div className="mt-auto mx-3 xl:hidden lg:hidden md:hidden">
                        <hr className="mb-3 border-top-1 surface-border" />

                        <ul className="list-none p-0 m-0 flex align-items-center select-none flex-row mb-4">
                            {/* Notification */}
                            <li className="mr-3 mt-2">
                                <Link href="#">
                                    <i
                                        className="pi pi-bell p-overlay-badge text-600 hover:text-900"
                                        style={{ fontSize: '1.25rem' }}
                                    >
                                        <Badge
                                            severity="danger"
                                            value="2"
                                        ></Badge>
                                    </i>
                                </Link>
                            </li>

                            {/* Switch Dark/Light mode */}
                            <li className="mr-3 mt-2">
                                <ThemeSwitcher
                                    tooltip={t(getReveseThemeName() + '-mode')}
                                    linkElementId="theme-link"
                                    lightThemeName="lara-light-blue"
                                    darkThemeName="lara-dark-blue"
                                />
                            </li>

                            {/* Switch Language */}
                            <li>
                                <LanguageSelector
                                    locale={router.locale?.toString() as string}
                                    translation={t}
                                />
                            </li>
                        </ul>
                    </div>
                </div>
            </div>
        </>
    )

    //
}

// EOF

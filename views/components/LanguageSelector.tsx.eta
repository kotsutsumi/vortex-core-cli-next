// Language.tsx

import { useEffect, useState } from 'react'
import { Dropdown, DropdownChangeEvent } from 'primereact/dropdown'
import { useTranslation } from 'next-i18next'

interface Item {
    label: string
    value: string
}

// set items
const items: Item[] = [
    {
        label: 'japanese',
        value: 'ja'
    },
    {
        label: 'english',
        value: 'en'
    }
]

export default function LanguageSelector(props: {
    locale: string
    translation: Function
}) {
    // language item state
    const [languageItem, setLanguageItem] = useState<Item | null>(null)

    // similar to componentDidMount and componentDidUpdate
    useEffect(() => {
        // Translate labels
        for (const [index, item] of items.entries()) {
            // select current locale
            if (items[index]['value'] === props.locale) {
                setLanguageItem(props.locale as any)
            }

            // translate label
            items[index]['label'] = props.translation(item['label'])
        }

        //
    }, [props])

    // ------------------------------------------------------------------------

    return (
        <>
            <Dropdown
                value={languageItem}
                onChange={(e: DropdownChangeEvent) => {
                    // set language item
                    setLanguageItem(e.value)

                    // set to location
                    window.location.replace(
                        `${e.value !== 'ja' ? '/' + e.value : ''}/`
                    )

                    //
                }}
                options={items}
                virtualScrollerOptions={{ itemSize: 38 }}
                placeholder="Language"
                className="w-full"
            />
        </>
    )

    //
}

// EOF
